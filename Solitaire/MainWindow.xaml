<Window
    x:Class="Spider.Solitaire.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:p="http://markupprogramming.codeplex.com/markup/programming"
    xmlns:vw="clr-namespace:Spider.Solitaire.View"
    xmlns:vm="clr-namespace:Spider.Solitaire.ViewModel"
    Title="Spider" Height="500" Width="1080" Name="window"
    DataContext="{DynamicResource SpiderViewModelDataSource}">
    
    <Window.Resources>
        
        <SolidColorBrush x:Key="GamePlayBackground" Color="DarkGreen"/>

        <DataTemplate x:Key="CardTemplate">
            <ContentPresenter x:Name="cardPresenter" CacheMode="BitmapCache">
                <ContentPresenter.ContentTemplateSelector>
                    <vw:CardTemplateSelector
                        EmptySpaceTemplate="{StaticResource EmptySpaceTemplate}"
                        DownCardTemplate="{StaticResource DownCardTemplate}"
                        UpCardTemplate="{StaticResource UpCardTemplate}"
                    />
                </ContentPresenter.ContentTemplateSelector>
                <p:Attached.Operations>
                    <vw:MoveObjectBehavior/>
                </p:Attached.Operations>
            </ContentPresenter>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelectable}" Value="True">
                    <Setter TargetName="cardPresenter" Property="Cursor" Value="Hand"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="PileMargin">
            <Setter Property="Control.Margin" Value="3,3,3,3"/>
        </Style>
        
        <DataTemplate x:Key="PileTemplate">
            <ItemsControl ItemsSource="{Binding}" ItemTemplate="{StaticResource CardTemplate}">
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CardType}" Value="{x:Static vm:CardType.EmptySpace}">
                                <Setter Property="vw:OverlapPanel.Offset" Value="0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CardType}" Value="{x:Static vm:CardType.Down}">
                                <Setter Property="vw:OverlapPanel.Offset" Value="5"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CardType}" Value="{x:Static vm:CardType.Up}">
                                <Setter Property="vw:OverlapPanel.Offset" Value="25"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <vw:OverlapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
        
    </Window.Resources>
    
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="N" Command="{Binding NewCommand}"/>
        <KeyBinding Modifiers="Alt" Key="F4" Command="{Binding ExitCommand}"/>
        <KeyBinding Modifiers="Control" Key="C" Command="{Binding CopyCommand}"/>
        <KeyBinding Modifiers="Control" Key="V" Command="{Binding PasteCommand}"/>
        <KeyBinding Modifiers="Control" Key="Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Modifiers="Control" Key="Y" Command="{Binding RedoCommand}"/>
        <KeyBinding Modifiers="Control" Key="D" Command="{Binding DealCommand}"/>
        <KeyBinding Modifiers="Control" Key="M" Command="{Binding MoveCommand}"/>
    </Window.InputBindings>
    
    <DockPanel>
        
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N"/>
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Copy" Command="{Binding CopyCommand}" InputGestureText="Ctrl+C"/>
                <MenuItem Header="_Paste" Command="{Binding PasteCommand}" InputGestureText="Ctrl+V"/>
                <MenuItem Header="_Undo" Command="{Binding UndoCommand}" InputGestureText="Ctrl+Z"/>
                <MenuItem Header="_Redo" Command="{Binding RedoCommand}" InputGestureText="Ctrl+Y"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Variation" ItemsSource="{Binding Variations}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
                            <Setter Property="Command" Value="{Binding DataContext.SetVariationCommand, ElementName=window}"/>
                            <Setter Property="CommandParameter"  Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="_Algorithm" ItemsSource="{Binding Algorithms}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
                            <Setter Property="Command" Value="{Binding DataContext.SetAlgorithmCommand, ElementName=window}"/>
                            <Setter Property="CommandParameter"  Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Game">
                <MenuItem Header="_Deal" Command="{Binding DealCommand}" InputGestureText="Ctrl+D"/>
                <MenuItem Header="_Move" Command="{Binding MoveCommand}" InputGestureText="Ctrl+M"/>
            </MenuItem>
        </Menu>
        
        <Canvas Background="{StaticResource GamePlayBackground}" x:Name="mainCanvas" ClipToBounds="True" DataContext="{Binding Tableau}">

            <ItemsControl Canvas.Left="45" Canvas.Top="-120" ItemsSource="{Binding DiscardPiles}" ItemTemplate="{StaticResource ResourceKey=PileTemplate}" ItemContainerStyle="{StaticResource PileMargin}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            
            <ItemsControl Canvas.Left="0" Canvas.Top="25" ItemsSource="{Binding Piles}" ItemTemplate="{StaticResource ResourceKey=PileTemplate}" ItemContainerStyle="{StaticResource PileMargin}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            
            <ContentControl x:Name="movePile" Canvas.Left="200" Canvas.Top="200" Content="{Binding MovePile}" ContentTemplate="{StaticResource ResourceKey=PileTemplate}">
                <p:Attached.Operations>
                    <vw:MoveObjectBehavior
                        x:Name="moveObjectBehavior"
                        IsMoveObject="True"
                        FromSelected="{Binding DataContext.Tableau.FromSelected, ElementName=window}"
                        MoveSelectCommand="{Binding DataContext.MoveSelectCommand, ElementName=window}"
                        AutoSelectCommand="{Binding DataContext.AutoSelectCommand, ElementName=window}"
                        TargetType="vm:CardViewModel"
                        Duration="0:0:0.5"
                        >
                        <vw:MoveObjectBehavior.Storyboard>
                            <Storyboard>
                                <ParallelTimeline>
                                    <DoubleAnimation
                                        Storyboard.TargetName="movePile"
                                        Storyboard.TargetProperty="(Canvas.Left)"
                                        From="{Binding ElementName=moveObjectBehavior, Path=From.X}"
                                        To="{Binding ElementName=moveObjectBehavior, Path=To.X}"
                                        Duration="{Binding ElementName=moveObjectBehavior, Path=ScaledDuration}"
                                        FillBehavior="Stop"
                                    />
                                    <DoubleAnimation
                                        Storyboard.TargetName="movePile"
                                        Storyboard.TargetProperty="(Canvas.Top)"
                                        From="{Binding ElementName=moveObjectBehavior, Path=From.Y}"
                                        To="{Binding ElementName=moveObjectBehavior, Path=To.Y}"
                                        Duration="{Binding ElementName=moveObjectBehavior, Path=ScaledDuration}"
                                        FillBehavior="Stop"
                                    />
                                </ParallelTimeline>
                            </Storyboard>
                        </vw:MoveObjectBehavior.Storyboard>
                    </vw:MoveObjectBehavior>
                </p:Attached.Operations>
                <ContentControl.Effect>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="20"/>
                </ContentControl.Effect>
            </ContentControl>
            
            <ContentControl x:Name="stockPile" Canvas.Left="450" Canvas.Top="400" Content="{Binding StockPile}" ContentTemplate="{StaticResource ResourceKey=PileTemplate}"/>
            
            <Button Canvas.Left="50" Canvas.Top="400" Command="{Binding DataContext.UndoCommand, ElementName=window}" Content="Undo"/>
            
            <Button Canvas.Left="100" Canvas.Top="400" Command="{Binding DataContext.RedoCommand, ElementName=window}" Content="Redo"/>
            
        </Canvas>
        
    </DockPanel>
    
</Window>
