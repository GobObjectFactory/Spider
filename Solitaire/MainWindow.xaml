<Window
    x:Class="Spider.Solitaire.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:vw="clr-namespace:Spider.Solitaire.View"
    xmlns:vm="clr-namespace:Spider.Solitaire.ViewModel"
    Title="Spider" Height="500" Width="1080" Name="window"
    DataContext="{DynamicResource SpiderViewModelDataSource}">
    <Window.Resources>
        <SolidColorBrush x:Key="GamePlayBackground" Color="DarkGreen"/>
        <Style x:Key="PileMargin">
            <Setter Property="Control.Margin" Value="3,3,3,3"/>
        </Style>
        <DataTemplate x:Key="PileTemplate">
            <ItemsControl ItemsSource="{Binding}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <vw:OverlapPanel Offset="0">
                            <vw:OverlapPanel.OffsetSelectors>
                                <vw:OffsetSelector Type="{x:Type vm:DownCardViewModel}" Offset="5"/>
                                <vw:OffsetSelector Type="{x:Type vm:UpCardViewModel}" Offset="25"/>
                            </vw:OverlapPanel.OffsetSelectors>
                        </vw:OverlapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="N" Command="{Binding NewCommand}"/>
        <KeyBinding Modifiers="Alt" Key="F4" Command="{Binding ExitCommand}"/>
        <KeyBinding Modifiers="Control" Key="C" Command="{Binding CopyCommand}"/>
        <KeyBinding Modifiers="Control" Key="V" Command="{Binding PasteCommand}"/>
        <KeyBinding Modifiers="Control" Key="Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Modifiers="Control" Key="Y" Command="{Binding RedoCommand}"/>
        <KeyBinding Modifiers="Control" Key="D" Command="{Binding DealCommand}"/>
        <KeyBinding Modifiers="Control" Key="M" Command="{Binding MoveCommand}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N"/>
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Copy" Command="{Binding CopyCommand}" InputGestureText="Ctrl+C"/>
                <MenuItem Header="_Paste" Command="{Binding PasteCommand}" InputGestureText="Ctrl+V"/>
                <MenuItem Header="_Undo" Command="{Binding UndoCommand}" InputGestureText="Ctrl+Z"/>
                <MenuItem Header="_Redo" Command="{Binding RedoCommand}" InputGestureText="Ctrl+Y"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Variation" ItemsSource="{Binding Variations}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
                            <Setter Property="Command" Value="{Binding DataContext.SetVariationCommand, ElementName=window}"/>
                            <Setter Property="CommandParameter"  Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="_Algorithm" ItemsSource="{Binding Algorithms}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
                            <Setter Property="Command" Value="{Binding DataContext.SetAlgorithmCommand, ElementName=window}"/>
                            <Setter Property="CommandParameter"  Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Game">
                <MenuItem Header="_Deal" Command="{Binding DealCommand}" InputGestureText="Ctrl+D"/>
                <MenuItem Header="_Move" Command="{Binding MoveCommand}" InputGestureText="Ctrl+M"/>
            </MenuItem>
        </Menu>
        <Canvas Background="{StaticResource GamePlayBackground}" x:Name="mainCanvas" ClipToBounds="True" DataContext="{Binding Tableau}">
            <ItemsControl Canvas.Left="45" Canvas.Top="-120" ItemsSource="{Binding DiscardPiles}" ItemContainerStyle="{StaticResource PileMargin}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <ItemsControl Canvas.Left="0" Canvas.Top="25" ItemsSource="{Binding Piles}" ItemTemplate="{StaticResource ResourceKey=PileTemplate}" ItemContainerStyle="{StaticResource PileMargin}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <ContentControl x:Name="movePile" Canvas.Left="200" Canvas.Top="200" Content="{Binding MovePile}" ContentTemplate="{StaticResource ResourceKey=PileTemplate}" IsHitTestVisible="False">
                <i:Interaction.Behaviors>
                    <vw:MoveObjectBehavior
                        IsMoveObject="True"
                        FromSelected="{Binding DataContext.Tableau.FromSelected, ElementName=window}"
                        SelectCommand="{Binding DataContext.SelectCommand, ElementName=window}"
                        AutoSelectCommand="{Binding DataContext.AutoSelectCommand, ElementName=window}"
                        TargetType="vm:CardViewModel"/>
                </i:Interaction.Behaviors>
                <ContentControl.Effect>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="20"/>
                </ContentControl.Effect>
            </ContentControl>
            <Button Command="{Binding DataContext.DealCommand, ElementName=window}" Canvas.Left="450" Canvas.Top="400">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentControl x:Name="stockPile" Content="{Binding StockPile}" ContentTemplate="{StaticResource ResourceKey=PileTemplate}">
                        	<ContentControl.Effect>
                        		<DropShadowEffect ShadowDepth="10" Opacity="0"/>
                        	</ContentControl.Effect>
                        	<VisualStateManager.VisualStateGroups>
                        		<VisualStateGroup x:Name="CommonStates">
                        			<VisualStateGroup.Transitions>
                        				<VisualTransition GeneratedDuration="0:0:0.5"/>
                        			</VisualStateGroup.Transitions>
                        			<VisualState x:Name="Normal"/>
                        			<VisualState x:Name="MouseOver">
                        				<Storyboard>
                        					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="stockPile">
                        						<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        					</DoubleAnimationUsingKeyFrames>
                        				</Storyboard>
                        			</VisualState>
                        			<VisualState x:Name="Pressed"/>
                        			<VisualState x:Name="Disabled"/>
                        		</VisualStateGroup>
                        	</VisualStateManager.VisualStateGroups>
                        </ContentControl>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button Canvas.Left="50" Canvas.Top="400" Command="{Binding DataContext.UndoCommand, ElementName=window}" Content="Undo"/>
            <Button Canvas.Left="100" Canvas.Top="400" Command="{Binding DataContext.RedoCommand, ElementName=window}" Content="Redo"/>
        </Canvas>
    </DockPanel>
</Window>
