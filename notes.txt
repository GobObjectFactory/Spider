========================================================================================================
r123 results:

C:\Documents and Settings\jrs\build\Spider\bin\Release>spider --games 100 --search
games played: 100, games won: 65%, games with discards: 82%
average moves: 261.93 (won: 335.05, lost: 126.14)

C:\Documents and Settings\jrs\build\Spider\bin\Release>spider --games 1000 --search
games played: 1000, games won: 67.9%, games with discards: 85.8%
average moves: 267.94 (won: 331.91, lost: 132.61)

C:\Documents and Settings\jrs\build\Spider\bin\Release>spider --games 100000 --search
games played: 100000, games won: 67.063%, games with discards: 86.638%
average moves: 267.88 (won: 331.38, lost: 138.58)

C:\Documents and Settings\jrs\build\Spider\bin\Release>spider --games 100 --search --variation 4
games played: 100, games won: 28%, games with discards: 37%
average moves: 282.57 (won: 522.11, lost: 189.42)

C:\Documents and Settings\jrs\build\Spider\bin\Release>spider --games 1000 --search --variation 4
games played: 1000, games won: 27.9%, games with discards: 39%
average moves: 276.9 (won: 514.52, lost: 184.95)

C:\Documents and Settings\jrs\build\Spider\bin\Release>spider --games 1000
games played: 1000, games won: 58.2%, games with discards: 76.8%
average moves: 261.77 (won: 350.38, lost: 138.39)
--------------------------------------------------------------------------------------------------------
current results:

C:\Documents and Settings\jrs\build\Spider\bin\Release>c:\cygwin\bin\time ./spider --games 100000 --
search
games played: 100000, games won: 67.17%, games with discards: 85.442%
average moves: 258.7 (won: 322.57, lost: 128.01)
0.01user 0.01system 6:02:47elapsed 0%CPU (0avgtext+0avgdata 148736maxresident)k
0inputs+0outputs (578major+0minor)pagefaults 0swaps
========================================================================================================

- eliminate fine-grained scoring when searching
- rewrite search into breadth-first search
- organize source files into folders

- rename workingTableau to WorkingTableau
- unify the three places where complex moves with holding piles are performed

- undo holding piles if it increases the order
- try to reuse TryToAddOneRunMove for CheckOffload

- promote one run delta to a full-fledged scoring feature
- consider length of to pile down count when scoring

- review space calculations when counting uses
- could collect composite uncovering moves
- rename test jig
- retest complex
- merge the multiple different places that space algorithms are implemented
- upgrade to full power of two extra suits algorithm
- improve scoring of offload moves
- consider enumerating all offload moves instead of one per pile
- for offload consider trying to find homes for homeless runs by uncovering targets

- optimize scoring factors using designed experiments
- before playing onto an space search for an space preserving sequence

- prefer holding moves that match suit

- prefer long exposed runs even if it means splitting a run, just before a deal

- figure out why simple consistently gets better results than complex
- theory: prefer to have a single run on an space
- calculate oneRunDelta correctly for swaps
- check whether moves with oneRunDelta > 0 are rejected

- alternate Nelder-Mead implementation:
  http://www.koders.com/csharp/fid218B2E3946027CB5037676EA50CE549B6FC26CF7.aspx?s=mdef:search
